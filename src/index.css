@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    --background: 220 25% 10%;
    --foreground: 210 40% 98%;

    --card: 220 20% 14%;
    --card-foreground: 210 40% 98%;

    --popover: 220 20% 14%;
    --popover-foreground: 210 40% 98%;

    --primary: 210 100% 50%;
    --primary-foreground: 0 0% 100%;

    --secondary: 150 60% 40%;
    --secondary-foreground: 0 0% 100%;

    --muted: 220 15% 20%;
    --muted-foreground: 210 20% 65%;

    --accent: 210 100% 60%;
    --accent-foreground: 0 0% 100%;

    --destructive: 0 70% 50%;
    --destructive-foreground: 0 0% 100%;

    --border: 220 20% 25%;
    --input: 220 20% 25%;
    --ring: 210 100% 50%;

    --radius: 0.75rem;

    --gradient-primary: linear-gradient(135deg, hsl(210 100% 50%), hsl(210 100% 60%));
    --gradient-secondary: linear-gradient(135deg, hsl(150 60% 40%), hsl(150 60% 50%));
    --gradient-hero: linear-gradient(180deg, hsl(220 25% 10%), hsl(220 30% 15%));
    
    --shadow-glow: 0 0 30px hsl(210 100% 50% / 0.3);
    --shadow-card: 0 8px 32px hsl(220 25% 5% / 0.4);
    
    --transition-smooth: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .dark {
    --background: 220 25% 10%;
    --foreground: 210 40% 98%;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground font-sans antialiased;
    font-family: 'Inter', system-ui, -apple-system, sans-serif;
  }
}

@layer utilities {
  .text-gradient-primary {
    @apply bg-clip-text text-transparent;
    background-image: var(--gradient-primary);
  }
  
  .text-gradient-secondary {
    @apply bg-clip-text text-transparent;
    background-image: var(--gradient-secondary);
  }
  
  .card-glow {
    box-shadow: var(--shadow-glow);
  }
  
  .animate-pulse-slow {
    animation: pulse 3s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }
  
  .transition-smooth {
    transition: var(--transition-smooth);
  }
}
